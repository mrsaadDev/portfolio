{"version":3,"sources":["Layout.js","Card.js","User.js","Stack.js","About.js","Work.js","Project.js","App.js","index.js"],"names":["Layout","styled","div","props","direction","Card","project","wide","row","user","User","InfoWrapper","Info","Name","Professioon","List","Link","target","href","size","img","a","Stack","stack","NameWrapper","Count","length","TagsWrapper","map","Tag","h2","About","about","Header","Li","name","value","ul","li","Work","work","title","works","slice","Project","links","color","image","description","Fragment","InProgress","ImageWrapper","Image","src","DescriptionLink","StackText","span","App","useState","data","setData","React","useEffect","fetch","res","json","getDataFromApi","Helmet","Grid","projects","WebFont","load","google","families","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e8136e6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Layout = styled.div`\n  display: flex;\n  flex-direction: ${(props) => (props.direction ? props.direction : \"row\")};\n\n  @media screen and (max-width: 700px) {\n    flex-direction: column !important;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  background: white;\n  border-radius: 16px;\n  display: flex;\n  box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.1);\n  margin: 10px;\n  padding: ${(props) => (props.project ? \"0\" : \"20px\")};\n  width: ${(props) => (props.wide ? \"560px\" : \"270px\")};\n  flex-direction: ${(props) => (props.row ? \"row\" : \"column\")};\n  justify-content: ${(props) => (props.user ? \"space-between\" : \"flex-start\")};\n\n  @media screen and (max-width: 700px) {\n    flex-direction: column;\n    width: 95vw;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaTelegramPlane, FaGithub, FaEnvelope } from \"react-icons/fa\";\n\nimport { Card } from \"./Card\";\n\nexport const User = () => {\n  return (\n    <Card wide row user>\n      <InfoWrapper>\n        \n        <Info>\n          <Name>Mr. Saad</Name>\n          <Professioon>Front-end developer</Professioon>\n        </Info>\n      </InfoWrapper>\n      <List>\n        <Link target=\"_blank\" href=\"https://t.me/mrsaaddev\">\n          <FaTelegramPlane size={30} />\n        </Link>\n        <Link target=\"_blank\" href=\"https://github.com/mrsaaddev\">\n          <FaGithub size={30} />\n        </Link>\n        <Link target=\"_blank\" href=\"mailto:mrsaadsmm@gmail.com\">\n          <FaEnvelope size={30} />\n        </Link>\n      </List>\n    </Card>\n  );\n};\n\nconst InfoWrapper = styled.div`\n  display: flex;\n`;\n\nconst Img = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 0 0 10px;\n`;\n\nconst Name = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  font-size: 24px;\n`;\n\nconst Professioon = styled.div`\n  padding-top: 5px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #ccc;\n  @media screen and (max-width: 700px) {\n    padding: 10px 0;\n  }\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Link = styled.a`\n  width: 40px;\n  height: 40px;\n  margin-left: 30px;\n  border-radius: 100%;\n  transition: 0.1s ease;\n  color: #ced1e0;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  &:hover {\n    color: #a8a9ad;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Card } from \"./Card\";\n\nexport const Stack = ({ stack }) => {\n  return (\n    <Card>\n      <NameWrapper>\n        <Count>{stack.length}</Count>\n        <Name>Stack</Name>\n      </NameWrapper>\n      <TagsWrapper>\n        {stack.map((a) => (\n          <Tag key={a}>{a}</Tag>\n        ))}\n      </TagsWrapper>\n    </Card>\n  );\n};\n\nconst NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Count = styled.div`\n  color: white;\n  padding: 4px 14px;\n  background: #ced1e0;\n  border-radius: 20px;\n`;\n\nconst Name = styled.h2`\n  font-size: 24px;\n  padding: 0;\n  padding-left: 10px;\n  margin: 0;\n`;\n\nconst TagsWrapper = styled.div`\n  display: flex;\n  padding-top: 20px;\n  flex-wrap: wrap;\n`;\n\nconst Tag = styled.div`\n  color: white;\n  font-weight: 500;\n  background: #538bff;\n  border-radius: 20px;\n  padding: 8px 20px;\n  margin: 0 10px 10px 0;\n  transition: 0.2s ease;\n  font-weight: 400;\n\n  &:hover {\n    background: #2f73ff;\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Card } from \"./Card\";\n\nexport const About = ({ about }) => {\n  return (\n    <Card wide>\n      <Header>About Me</Header>\n      <List>\n        {about.map((a) => (\n          <Li key={a.name}>\n            <strong>{a.name}:</strong> {a.value}\n          </Li>\n        ))}\n      </List>\n    </Card>\n  );\n};\n\nconst Header = styled.h2`\n  padding: 0 0 10px 0;\n  margin: 0;\n  font-size: 24px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0 0 0 20px;\n  margin: 0;\n`;\n\nconst Li = styled.li`\n  padding: 4px 0;\n`;\n","// API Example:\n//   \"work\": [\n//     \"Experience title\",\n//     {\n//       name: \"Company\",\n//       value: \"from .. to ..\"\n//     },\n//     ..\n//   ]\n\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Card } from \"./Card\";\n\nexport const Work = ({ work }) => {\n  const title = work[0];\n  const works = work.slice(1, work.length);\n\n  return (\n    <Card wide>\n      <Header>{title}</Header>\n      <List>\n        {works.map((a) => (\n          <Li key={a.name}>\n            <strong>{a.name}:</strong> {a.value}\n          </Li>\n        ))}\n      </List>\n    </Card>\n  );\n};\n\nconst Header = styled.h2`\n  padding: 0 0 10px 0;\n  margin: 0;\n  font-size: 24px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0 0 0 20px;\n  margin: 0;\n`;\n\nconst Li = styled.li`\n  padding: 4px 0;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaGithub, FaPlay } from \"react-icons/fa\";\n\nimport { Card } from \"./Card\";\n\nexport const Project = ({ links, name, color, image, description, stack }) => {\n  return (\n    <Card project>\n      <NameWrapper>\n        <Name links={links}>{name}</Name>\n        <List>\n          {links.length > 1 ? (\n            <React.Fragment>\n              <Link target=\"_blank\" href={links[0]}>\n                <FaGithub size={20} />\n              </Link>\n              <Link target=\"_blank\" href={links[1]}>\n                <FaPlay size={20} />\n              </Link>\n            </React.Fragment>\n          ) : (\n            <InProgress>In progress</InProgress>\n          )}\n        </List>\n      </NameWrapper>\n      <ImageWrapper>\n        <Image color={color} src={image}></Image>\n        <DescriptionLink target=\"_blank\" href={links[1]}>\n          {description}\n          <StackText>{stack}</StackText>\n        </DescriptionLink>\n      </ImageWrapper>\n    </Card>\n  );\n};\n\nconst NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst Name = styled.h2`\n  margin: 0;\n  font-size: 24px;\n  color: ${(props) => (props.links ? \"black\" : \"#bebfc4\")};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst ImageWrapper = styled.div`\n  position: relative;\n  height: 250px;\n  width: 100%;\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  overflow: hidden;\n`;\n\nconst Image = styled.img`\n  height: 250px;\n  width: 100%;\n  transition: 0.2s ease;\n  border: 0;\n  background: ${(props) => (props.image ? `url(${props.image})` : \"orange\")};\n  &:hover {\n    cursor: pointer;\n  }\n  &:hover + a,\n  &:hover + span {\n    display: block;\n  }\n`;\n\nconst DescriptionLink = styled.a`\n  height: 250px;\n  width: 100%;\n  position: absolute;\n  z-index: 2;\n  color: white;\n  top: 0;\n  left: 0;\n  background: transparent;\n  transition: 0.2s ease;\n  padding: 20px;\n  box-sizing: border-box;\n  color: transparent;\n  text-decoration: none;\n  font-size: 16px;\n  line-height: 24px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  &:hover {\n    background: rgba(0, 0, 0, 0.6);\n    color: white;\n  }\n\n  @media screen and (max-width: 700px) {\n    background: rgba(0, 0, 0, 0.5);\n    color: white;\n  }\n`;\n\nconst StackText = styled.span`\n  font-weight: 500;\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-left: 10px;\n`;\n\nconst Link = styled.a`\n  color: #ced1e0;\n  margin-left: 15px;\n  border-radius: 100%;\n  transition: 0.1s ease;\n  &:hover {\n    color: #a8a9ad;\n    cursor: pointer;\n  }\n`;\n\nconst InProgress = styled.span`\n  color: #bebfc4;\n  font-weight: bold;\n  white-space: nowrap;\n`;\n","import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\n\nimport { Layout } from \"./Layout\";\nimport { User } from \"./User\";\nimport { Stack } from \"./Stack\";\nimport { About } from \"./About\";\nimport { Work } from \"./Work\";\nimport { Project } from \"./Project\";\n\nconst API = \"https://api.npoint.io/f40877d03d8d240cccd2\";\n\nexport const App = () => {\n  const [data, setData] = useState();\n\n  React.useEffect(() => {\n    const getDataFromApi = async () => {\n      const res = await fetch(API);\n      const data = await res.json();\n\n      setData(data);\n    };\n\n    getDataFromApi();\n  }, []);\n\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Mr. Saad</title>\n      </Helmet>\n      <Layout direction=\"row\">\n        <User />\n      </Layout>\n      <Layout direction=\"row\">\n        <Layout direction=\"column\">\n          <Stack stack={data.stack} />\n        </Layout>\n        <Layout direction=\"column\">\n          <About about={data.about} />\n          <Work work={data.work} />\n        </Layout>\n      </Layout>\n      <Grid>\n        {data.projects.map((project) => (\n          <Project key={project.name} {...project} />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  @media screen and (max-width: 700px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport WebFont from \"webfontloader\";\n\nimport { App } from \"./App\";\n\nWebFont.load({\n  google: {\n    families: [\"Roboto:400,500,700\"],\n  },\n});\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #e9ebf2;\n    flex-direction: column;\n  }\n\n  * {\n    box-sizing: border-box;\n    user-select: none;\n    font-family: \"Roboto\", sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}